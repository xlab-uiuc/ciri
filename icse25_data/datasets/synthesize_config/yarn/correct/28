<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>
    
<property>
  <name>yarn.nodemanager.runtime.linux.docker.default-container-network</name>
  <value>host</value>
    <description>The network used when launching containers using the
      DockerContainerRuntime when no network is specified in the request
      . This network must be one of the (configurable) set of allowed container
      networks.</description>
</property>

<property>
  <name>yarn.nodemanager.recovery.dir</name>
  <value>/valid/file1</value>
    <description>The local filesystem directory in which the node manager will
    store state when recovery is enabled.</description>
</property>

<property>
  <name>yarn.nodemanager.disk-health-checker.enable</name>
  <value>false</value>
    <description>
    Flag to enable NodeManager disk health checker
    </description>
</property>

<property>
  <name>yarn.timeline-service.webapp.https.address</name>
  <value>${yarn.timeline-service.hostname}:8190</value>
    <description>The https address of the timeline service web application.</description>
</property>

<property>
  <name>yarn.timeline-service.client.internal-timers-ttl-secs</name>
  <value>210</value>
    <description>
      How long the internal Timer Tasks can be alive in writer. If there is no
      write operation for this configured time, the internal timer tasks will
      be close.
    </description>
</property>

<property>
  <name>yarn.nodemanager.node-attributes.provider.fetch-interval-ms</name>
  <value>300000</value>
    <description>
      Time interval that determines how long NM fetches node attributes
      from a given provider. If -1 is configured then node labels are
      retrieved from provider only during initialization. Defaults to 10 mins.
    </description>
</property>

<property>
  <name>yarn.resourcemanager.nm-container-queuing.max-queue-wait-time-ms</name>
  <value>200</value>
    <description>
    Max queue wait time for a container queue at a NodeManager.
    </description>
</property>

<property>
  <name>yarn.nodemanager.container.stderr.pattern</name>
  <value>{*stderr*,*STDERR*}</value>
    <description>
    Error filename pattern, to identify the file in the container's
    Log directory which contain the container's error log. As error file
    redirection is done by client/AM and yarn will not be aware of the error
    file name. YARN uses this pattern to identify the error file and tail
    the error log as diagnostics when the container execution returns non zero
    value. Filename patterns are case sensitive and should match the
    specifications of FileSystem.globStatus(Path) api. If multiple filenames
    matches the pattern, first file matching the pattern will be picked.
    </description>
</property>

</configuration>
