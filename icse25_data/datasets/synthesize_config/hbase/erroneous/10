<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>

<property>
  <name>hbase.regionserver.handler.count</name>
  <value>30</value>
    <description>Count of RPC Listener instances spun up on RegionServers.
      Same property is used by the Master for count of master handlers.
      Too many handlers can be counter-productive. Make it a multiple of
      CPU count. If mostly read-only, handlers count close to cpu count
      does well. Start with twice the CPU count and tune from there.</description>
</property>

<property>
  <name>hbase.regionserver.dns.interface</name>
  <value>default</value>
    <description>The name of the Network Interface from which a region server
      should report its IP address.</description>
</property>

<property>
  <name>hbase.regionserver.region.split.policy</name>
  <value>org.apache.hadoop.hbase.regionserver.SteppingSplitPolicy</value>
    <description>
      A split policy determines when a region should be split. The various
      other split policies that are available currently are BusyRegionSplitPolicy,
      ConstantSizeRegionSplitPolicy, DisabledRegionSplitPolicy,
      DelimitedKeyPrefixRegionSplitPolicy, KeyPrefixRegionSplitPolicy, and
      SteppingSplitPolicy. DisabledRegionSplitPolicy blocks manual region splitting.
    </description>
</property>

<property>
  <name>hbase.hregion.memstore.block.multiplier</name>
  <value>4</value>
    <description>
    Block updates if memstore has hbase.hregion.memstore.block.multiplier
    times hbase.hregion.memstore.flush.size bytes.  Useful preventing
    runaway memstore during spikes in update traffic.  Without an
    upper-bound, memstore fills such that when it flushes the
    resultant flush files take a long time to compact or split, or
    worse, we OOME.</description>
</property>

<property>
  <name>hbase.ipc.client.fallback-to-simple-auth-allowed</name>
  <value>true</value>
    <description>When a client is configured to attempt a secure connection, but attempts to
      connect to an insecure server, that server may instruct the client to
      switch to SASL SIMPLE (unsecure) authentication. This setting controls
      whether or not the client will accept this instruction from the server.
      When false (the default), the client will not allow the fallback to SIMPLE
      authentication, and will abort the connection.</description>
</property>

<property>
  <name>hbase.snapshot.enabled</name>
  <value>false</value>
    <description>Set to true to allow snapshots to be taken / restored / cloned.</description>
</property>

<property>
  <name>hbase.status.multicast.address.ip</name>
  <value>1.1.1.1.1.1</value>
    <description>
      Multicast address to use for the status publication by multicast.
    </description>
</property>

<property>
  <name>hbase.snapshot.master.timeout.millis</name>
  <value>150000</value>
    <description>
       Timeout for master for the snapshot procedure execution.
    </description>
</property>

</configuration>
