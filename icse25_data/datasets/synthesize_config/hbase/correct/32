<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>

<property>
  <name>hbase.regionserver.info.port</name>
  <value>3001</value>
    <description>The port for the HBase RegionServer web UI
    Set to -1 if you do not want the RegionServer UI to run.</description>
</property>

<property>
  <name>hbase.zookeeper.property.initLimit</name>
  <value>10</value>
    <description>Property from ZooKeeper's config zoo.cfg.
    The number of ticks that the initial synchronization phase can take.</description>
</property>

<property>
  <name>hbase.hregion.preclose.flush.size</name>
  <value>10485760</value>
    <description>
      If the memstores in a region are this size or larger when we go
      to close, run a "pre-flush" to clear out memstores before we put up
      the region closed flag and take the region offline.  On close,
      a flush is run under the close flag to empty memory.  During
      this time the region is offline and we are not taking on any writes.
      If the memstore content is large, this flush could take a long time to
      complete.  The preflush is meant to clean out the bulk of the memstore
      before putting up the close flag and taking the region offline so the
      flush that runs under the close flag has little to do.</description>
</property>

<property>
  <name>hbase.regionserver.majorcompaction.pagecache.drop</name>
  <value>true</value>
    <description>Specifies whether to drop pages read/written into the system page cache by
      major compactions. Setting it to true helps prevent major compactions from
      polluting the page cache, which is almost always required, especially for clusters
      with low/moderate memory to storage ratio.</description>
</property>

<property>
  <name>hbase.regionserver.minorcompaction.pagecache.drop</name>
  <value>true</value>
    <description>Specifies whether to drop pages read/written into the system page cache by
      minor compactions. Setting it to true helps prevent minor compactions from
      polluting the page cache, which is most beneficial on clusters with low
      memory to storage ratio or very write heavy clusters. You may want to set it to
      false under moderate to low write workload when bulk of the reads are
      on the most recently written data.</description>
</property>

<property>
  <name>hbase.rs.cacheblocksonwrite</name>
  <value>false</value>
      <description>Whether an HFile block should be added to the block cache when the
        block is finished.</description>
</property>

<property>
  <name>hbase.status.listener.class</name>
  <value>org.apache.hadoop.hbase.client.ClusterStatusListener$MulticastListener</value>
    <description>
      Implementation of the status listener with a multicast message.
    </description>
</property>

<property>
  <name>hbase.rpc.rows.warning.threshold</name>
  <value>5000</value>
    <description>
      Number of rows in a batch operation above which a warning will be logged.
    </description>
</property>

</configuration>
