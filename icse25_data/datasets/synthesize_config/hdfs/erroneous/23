<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>

<property>
  <name>dfs.datanode.handler.count</name>
  <value>1</value>
  <description>The number of server threads for the datanode.</description>
</property>

<property>
  <name>dfs.namenode.lazypersist.file.scrub.interval.sec</name>
  <value>300</value>
  <description>
    The NameNode periodically scans the namespace for LazyPersist files with
    missing blocks and unlinks them from the namespace. This configuration key
    controls the interval between successive scans. If this value is set to 0,
    the file scrubber is disabled.
  </description>
</property>

<property>
  <name>dfs.datanode.volumes.replica-add.threadpool.size</name>
  <value>0.5</value>
  <description>Specifies the maximum number of threads to use for
  adding block in volume. Default value for this configuration is
  max of (volume * number of bp_service, number of processor).
  </description>
</property>

<property>
  <name>dfs.namenode.inotify.max.events.per.rpc</name>
  <value>2000</value>
  <description>Maximum number of events that will be sent to an inotify client
    in a single RPC response. The default value attempts to amortize away
    the overhead for this RPC while avoiding huge memory requirements for the
    client and NameNode (1000 events should consume no more than 1 MB.)
  </description>
</property>

<property>
  <name>dfs.namenode.state.context.enabled</name>
  <value>false</value>
  <description>
    Whether enable namenode sending back its current txnid back to client.
    Setting this to true is required by Consistent Read from Standby feature.
    But for regular cases, this should be set to false to avoid the overhead
    of updating and maintaining this state.
  </description>
</property>

<property>
  <name>datanode.https.port</name>
  <value>ciri</value>
  <description>
    HTTPS port for DataNode.
  </description>
</property>

<property>
  <name>dfs.qjournal.get-journal-state.timeout.ms</name>
  <value>120000</value>
  <description>
    Timeout in milliseconds when calling getJournalState().
    JournalNodes.
  </description>
</property>

<property>
  <name>dfs.namenode.send.qop.enabled</name>
  <value>false</value>
    <description>
      A boolean specifies whether NameNode should encrypt the established QOP
      and include it in block token. The encrypted QOP will be used by DataNode
      as target QOP, overwriting DataNode configuration. This ensures DataNode
      will use exactly the same QOP NameNode and client has already agreed on.
    </description>
</property>

</configuration>
