<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>

<configuration>

<property>
  <name>dfs.default.chunk.view.size</name>
  <value>65536</value>
  <description>The number of bytes to view for a file on the browser.
  </description>
</property>

<property>
  <name>dfs.namenode.max.full.block.report.leases</name>
  <value>1</value>
  <description>The maximum number of leases for full block reports that the
    NameNode will issue at any given time.  This prevents the NameNode from
    being flooded with full block reports that use up all the RPC handler
    threads.  This number should never be more than the number of RPC handler
    threads or less than 1.
  </description>
</property>

<property>
  <name>dfs.namenode.checkpoint.edits.dir</name>
  <value>/valid/dir1</value>
  <description>Determines where on the local filesystem the DFS secondary
      name node should store the temporary edits to merge.
      If this is a comma-delimited list of directories then the edits is
      replicated in all of the directories for redundancy.
      Default value is same as dfs.namenode.checkpoint.dir
  </description>
</property>

<property>
  <name>dfs.namenode.audit.loggers</name>
  <value>default</value>
  <description>
    List of classes implementing audit loggers that will receive audit events.
    These should be implementations of org.apache.hadoop.hdfs.server.namenode.AuditLogger.
    The special value "default" can be used to reference the default audit
    logger, which uses the configured log system. Installing custom audit loggers
    may affect the performance and stability of the NameNode. Refer to the custom
    logger's documentation for more details.
  </description>
</property>

<property>
  <name>dfs.client.domain.socket.data.traffic</name>
  <value>true</value>
  <description>
    This control whether we will try to pass normal data traffic
    over UNIX domain socket rather than over TCP socket
    on node-local data transfer.
    This is currently experimental and turned off by default.
  </description>
</property>

<property>
  <name>dfs.storage.policy.enabled</name>
  <value>true</value>
  <description>
    Allow users to change the storage policy on files and directories.
  </description>
</property>

<property>
  <name>dfs.provided.aliasmap.inmemory.dnrpc-address</name>
  <value>127.0.0.1</value>
    <description>
      The address where the aliasmap server will be running. In the case of
      HA/Federation where multiple namenodes exist, and if the Namenode is
      configured to run the aliasmap server
      (dfs.provided.aliasmap.inmemory.enabled is set to true),
      the name service id is added to the name, e.g.,
      dfs.provided.aliasmap.inmemory.rpc.address.EXAMPLENAMESERVICE.
      The value of this property will take the form of host:rpc-port.
    </description>
</property>

<property>
  <name>dfs.datanode.disk.check.timeout</name>
  <value>10nounit</value>
    <description>
      Maximum allowed time for a disk check to complete. If the check does not
      complete within this time interval then the disk is declared as failed.
      This setting supports multiple time unit suffixes as described in
      dfs.heartbeat.interval. If no suffix is specified then milliseconds is assumed.
    </description>
</property>

</configuration>
