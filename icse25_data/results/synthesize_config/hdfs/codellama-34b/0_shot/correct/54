Raw json:

{'hasError': True, 'errParameter': ['dfs.datanode.address', 'dfs.ha.tail-edits.period.backoff-max', 'dfs.client.use.datanode.hostname', 'dfs.namenode.metrics.logger.period.seconds', 'dfs.namenode.state.context.enabled', 'dfs.datanode.restart.replica.expiration', 'dfs.qjournal.new-epoch.timeout.ms'], 'reason': ['The datanode server address and port for data transfer. should be a valid port number', 'The maximum time the tailer should wait between checking for new edit log entries. Exponential backoff will be applied when an edit log tail is performed but no edits are available to be read. Values less than or equal to zero disable backoff entirely; this is the default behavior. Supports multiple time unit suffix (case insensitive), as described in dfs.heartbeat.interval. should be a valid time unit', 'Whether clients should use datanode hostnames when connecting to datanodes. should be a boolean', 'This setting controls how frequently the NameNode logs its metrics. The logging configuration must also define one or more appenders for NameNodeMetricsLog for the metrics to be logged. NameNode metrics logging is disabled if this value is set to zero or less than zero. should be a valid time unit', 'Whether enable namenode sending back its current txnid back to client. Setting this to true is required by Consistent Read from Standby feature. But for regular cases, this should be set to false to avoid the overhead of updating and maintaining this state. should be a boolean', 'During shutdown for restart, the amount of time in seconds budgeted for datanode restart. should be a valid time unit', 'Timeout in milliseconds when getting an epoch number for write access to JournalNodes. should be a valid time unit']}

Final result:

There are 7 misconfiguration parameters in the input: dfs.datanode.address	dfs.ha.tail-edits.period.backoff-max	dfs.client.use.datanode.hostname	dfs.namenode.metrics.logger.period.seconds	dfs.namenode.state.context.enabled	dfs.datanode.restart.replica.expiration	dfs.qjournal.new-epoch.timeout.ms
[Ciri] Reason for dfs.datanode.address: The datanode server address and port for data transfer. should be a valid port number
[Ciri] Reason for dfs.ha.tail-edits.period.backoff-max: The maximum time the tailer should wait between checking for new edit log entries. Exponential backoff will be applied when an edit log tail is performed but no edits are available to be read. Values less than or equal to zero disable backoff entirely; this is the default behavior. Supports multiple time unit suffix (case insensitive), as described in dfs.heartbeat.interval. should be a valid time unit
[Ciri] Reason for dfs.client.use.datanode.hostname: Whether clients should use datanode hostnames when connecting to datanodes. should be a boolean
[Ciri] Reason for dfs.namenode.metrics.logger.period.seconds: This setting controls how frequently the NameNode logs its metrics. The logging configuration must also define one or more appenders for NameNodeMetricsLog for the metrics to be logged. NameNode metrics logging is disabled if this value is set to zero or less than zero. should be a valid time unit
[Ciri] Reason for dfs.namenode.state.context.enabled: Whether enable namenode sending back its current txnid back to client. Setting this to true is required by Consistent Read from Standby feature. But for regular cases, this should be set to false to avoid the overhead of updating and maintaining this state. should be a boolean
[Ciri] Reason for dfs.datanode.restart.replica.expiration: During shutdown for restart, the amount of time in seconds budgeted for datanode restart. should be a valid time unit
[Ciri] Reason for dfs.qjournal.new-epoch.timeout.ms: Timeout in milliseconds when getting an epoch number for write access to JournalNodes. should be a valid time unit
