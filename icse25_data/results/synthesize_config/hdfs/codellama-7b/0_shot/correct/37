Raw json:

{'hasError': True, 'errParameter': ['dfs.client.block.write.replace-datanode-on-failure.enable'], 'reason': ['dfs.client.block.write.replace-datanode-on-failure.enable is not a valid property for hdfs version 3.3.0']}

{'hasError': True, 'errParameter': ['dfs.client.block.write.replace-datanode-on-failure.enable'], 'reason': ['dfs.client.block.write.replace-datanode-on-failure.enable is not a valid property for hdfs version 3.3.0']}

{'hasError': True, 'errParameter': ['dfs.client.block.write.replace-datanode-on-failure.policy', 'dfs.client.block.write.replace-datanode-on-failure.enable', 'dfs.domain.socket.path'], 'reason': ['dfs.client.block.write.replace-datanode-on-failure.policy must be either ALWAYS, NEVER, or ONLY_AT_END', 'dfs.client.block.write.replace-datanode-on-failure.enable must be either true or false', 'dfs.domain.socket.path must be a valid path']}

Final result:

There are 1 misconfiguration parameters in the input: dfs.client.block.write.replace-datanode-on-failure.enable
[Ciri] Reason for dfs.client.block.write.replace-datanode-on-failure.enable: dfs.client.block.write.replace-datanode-on-failure.enable is not a valid property for hdfs version 3.3.0
