Raw json:

{'hasError': True, 'errParameter': ['dfs.client.block.write.replace-datanode-on-failure.enable', 'dfs.client.block.write.replace-datanode-on-failure.policy'], 'reason': ['dfs.client.block.write.replace-datanode-on-failure.enable is not a valid property', 'dfs.client.block.write.replace-datanode-on-failure.policy is not a valid property']}

{'hasError': True, 'errParameter': ['dfs.client.block.write.replace-datanode-on-failure.enable'], 'reason': ['dfs.client.block.write.replace-datanode-on-failure.enable must be set to true or false']}

{'hasError': True, 'errParameter': ['dfs.client.block.write.replace-datanode-on-failure.policy'], 'reason': ['dfs.client.block.write.replace-datanode-on-failure.policy is not a valid property.']}

Raw json:

{'hasError': True, 'errParameter': ['dfs.client.block.write.replace-datanode-on-failure.enable'], 'reason': ['dfs.client.block.write.replace-datanode-on-failure.enable must be one of [true, false, NEVER]']}

{'hasError': True, 'errParameter': ['dfs.client.block.write.replace-datanode-on-failure.enable'], 'reason': ['dfs.client.block.write.replace-datanode-on-failure.enable is not a valid property for hdfs version 3.3.0']}

{'hasError': True, 'errParameter': ['dfs.client.block.write.replace-datanode-on-failure.enable'], 'reason': ['dfs.client.block.write.replace-datanode-on-failure.enable must be set to true or false']}

Final result:

There are 1 misconfiguration parameters in the input: dfs.client.block.write.replace-datanode-on-failure.enable
[Ciri] Reason for dfs.client.block.write.replace-datanode-on-failure.enable: dfs.client.block.write.replace-datanode-on-failure.enable must be one of [true, false, NEVER]
