Raw json:

{'hasError': True, 'errParameter': ['dfs.client.block.write.replace-datanode-on-failure.enable'], 'reason': ["The property 'dfs.client.block.write.replace-datanode-on-failure.enable' is missing a closing tag for the description field."]}

{'hasError': True, 'errParameter': ['dfs.client.block.write.replace-datanode-on-failure.enable', 'dfs.client.deadnode.detection.probe.deadnode.interval.ms'], 'reason': ["The property 'dfs.client.block.write.replace-datanode-on-failure.enable' should be 'dfs.client.block.write.replace-datanode-on-failure.enabled'.", "The property 'dfs.client.deadnode.detection.probe.deadnode.interval.ms' is missing a description."]}

{'hasError': True, 'errParameter': ['dfs.client.block.write.replace-datanode-on-failure.enable'], 'reason': ["The property 'dfs.client.block.write.replace-datanode-on-failure.enable' is deprecated in HDFS version 3.3.0. It should be removed from the configuration file."]}

Final result:

There are 1 misconfiguration parameters in the input: dfs.client.block.write.replace-datanode-on-failure.enable
[Ciri] Reason for dfs.client.block.write.replace-datanode-on-failure.enable: The property 'dfs.client.block.write.replace-datanode-on-failure.enable' is deprecated in HDFS version 3.3.0. It should be removed from the configuration file.
