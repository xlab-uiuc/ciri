Raw json:

{'hasError': True, 'errParameter': ['quorum.auth.enableSasl', 'quorum.auth.server.saslLoginContext', 'minSessionTimeout', 'standaloneEnabled', 'autopurge.purgeInterval', 'syncEnabled', 'localSessionsEnabled', 'autopurge.snapRetainCount'], 'reason': ['quorum.auth.enableSasl must be a boolean value', 'quorum.auth.server.saslLoginContext must be a string value', 'minSessionTimeout must be an integer value', 'standaloneEnabled must be a boolean value', 'autopurge.purgeInterval must be an integer value', 'syncEnabled must be a boolean value', 'localSessionsEnabled must be a boolean value', 'autopurge.snapRetainCount must be an integer value']}

{'hasError': True, 'errParameter': ['dataDir', 'clientPort'], 'reason': ['dataDir is not a directory', 'clientPort is not a valid port']}

{'hasError': True, 'errParameter': ['dataDir'], 'reason': ['dataDir is a required parameter']}

Raw json:

{'hasError': True, 'errParameter': ['autopurge.snapRetainCount'], 'reason': ['The value of autopurge.snapRetainCount must be greater than or equal to 3.']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort'], 'reason': ['dataDir is not a directory', 'dataLogDir is not a directory', 'clientPort is not a valid port']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'quorumListenOnAllIPs', 'quorumPort', 'quorumServer'], 'reason': ['dataDir is not set', 'dataLogDir is not set', 'clientPort is not set', 'tickTime is not set', 'initLimit is not set', 'syncLimit is not set', 'quorumListenOnAllIPs is not set', 'quorumPort is not set', 'quorumServer is not set']}

Raw json:

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort'], 'reason': ['The dataDir property is not set.', 'The dataLogDir property is not set.', 'The clientPort property is not set.']}

{'hasError': False, 'errParameter': [], 'reason': []}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'maxClientCnxns', 'tickTime', 'initLimit', 'syncLimit', 'autopurge.snapRetainCount'], 'reason': ['dataDir must be a directory', 'dataLogDir must be a directory', 'clientPort must be a number', 'maxClientCnxns must be a number', 'tickTime must be a number', 'initLimit must be a number', 'syncLimit must be a number', 'autopurge.snapRetainCount must be a number']}

Raw json:

{'hasError': True, 'errParameter': ['autopurge.purgeInterval', 'autopurge.snapRetainCount'], 'reason': ['The value of autopurge.purgeInterval must be greater than or equal to 1000. The value of autopurge.snapRetainCount must be greater than or equal to 3.']}

{'hasError': True, 'errParameter': ['dataDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'autopurge.snapRetainCount', 'autopurge.purgeInterval'], 'reason': ['dataDir is not set', 'clientPort is not set', 'tickTime is not set', 'initLimit is not set', 'syncLimit is not set', 'autopurge.snapRetainCount is not set', 'autopurge.purgeInterval is not set']}

{'hasError': False, 'errParameter': [], 'reason': []}

Raw json:

{'hasError': False, 'errParameter': [], 'reason': []}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'quorumListenOnAllIPs'], 'reason': ['dataDir is not a directory', 'dataLogDir is not a directory', 'clientPort is not a number', 'tickTime is not a number', 'initLimit is not a number', 'syncLimit is not a number', 'quorumListenOnAllIPs is not a boolean']}

{'hasError': True, 'errParameter': ['dataDir'], 'reason': ['The dataDir property must be set to a valid directory path.']}

Raw json:

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'server.1', 'server.2', 'server.3'], 'reason': ['dataDir is not set', 'dataLogDir is not set', 'clientPort is not set', 'tickTime is not set', 'initLimit is not set', 'syncLimit is not set', 'server.1 is not set', 'server.2 is not set', 'server.3 is not set']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'quorumListenOnAllIPs'], 'reason': ['dataDir is not a valid directory', 'dataLogDir is not a valid directory', 'clientPort is not a valid port number', 'tickTime is not a valid integer', 'initLimit is not a valid integer', 'syncLimit is not a valid integer', 'quorumListenOnAllIPs is not a valid boolean']}

{'hasError': True, 'errParameter': ['dataDir'], 'reason': ['dataDir is not a valid directory']}

Raw json:

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir'], 'reason': ['The dataDir and dataLogDir properties are required for ZooKeeper to function properly.', 'The dataDir and dataLogDir properties are required for ZooKeeper to function properly.']}

{'hasError': True, 'errParameter': ['dataDir', 'clientPort', 'dataLogDir', 'tickTime', 'initLimit', 'syncLimit', 'autopurge.snapRetainCount'], 'reason': ['dataDir is not a valid directory', 'clientPort is not a valid port number', 'dataLogDir is not a valid directory', 'tickTime is not a valid number', 'initLimit is not a valid number', 'syncLimit is not a valid number', 'autopurge.snapRetainCount is not a valid number']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'autopurge.snapRetainCount'], 'reason': ['dataDir is not a valid directory', 'dataLogDir is not a valid directory', 'clientPort is not a valid port', 'tickTime is not a valid number', 'initLimit is not a valid number', 'syncLimit is not a valid number', 'autopurge.snapRetainCount is not a valid number']}

Raw json:

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort'], 'reason': ['dataDir is not a valid directory', 'dataLogDir is not a valid directory', 'clientPort is not a valid port']}

{'hasError': False, 'errParameter': [], 'reason': []}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir'], 'reason': ['dataDir and dataLogDir must be specified']}

Raw json:

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir'], 'reason': ['The dataDir and dataLogDir properties are required.']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'server.1', 'server.2', 'server.3'], 'reason': ['dataDir is not a directory', 'dataLogDir is not a directory', 'clientPort is not a number', 'tickTime is not a number', 'initLimit is not a number', 'syncLimit is not a number', 'server.1 is not a number', 'server.2 is not a number', 'server.3 is not a number']}

{'hasError': False, 'errParameter': [], 'reason': []}

Raw json:

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'initLimit', 'syncLimit', 'tickTime', 'maxClientCnxns', 'autopurge.snapRetainCount'], 'reason': ['dataDir is not a directory', 'dataLogDir is not a directory', 'clientPort is not a number', 'initLimit is not a number', 'syncLimit is not a number', 'tickTime is not a number', 'maxClientCnxns is not a number', 'autopurge.snapRetainCount is not a number']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'server.1', 'server.2', 'server.3'], 'reason': ['dataDir is not specified', 'dataLogDir is not specified', 'clientPort is not specified', 'tickTime is not specified', 'initLimit is not specified', 'syncLimit is not specified', 'server.1 is not specified', 'server.2 is not specified', 'server.3 is not specified']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'quorumListenOnAllIPs'], 'reason': ['dataDir is a required parameter', 'dataLogDir is a required parameter', 'clientPort is a required parameter', 'tickTime is a required parameter', 'initLimit is a required parameter', 'syncLimit is a required parameter', 'quorumListenOnAllIPs is a required parameter']}

Raw json:

{'hasError': True, 'errParameter': ['quorum.auth.enableSasl'], 'reason': ['quorum.auth.enableSasl is not a valid property for zookeeper version 3.7.0']}

{'hasError': False, 'errParameter': [], 'reason': []}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'server.1', 'server.2', 'server.3'], 'reason': ['dataDir is not set', 'dataLogDir is not set', 'clientPort is not set', 'tickTime is not set', 'initLimit is not set', 'syncLimit is not set', 'server.1 is not set', 'server.2 is not set', 'server.3 is not set']}

Raw json:

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'autopurge.snapRetainCount', 'autopurge.purgeInterval'], 'reason': ['dataDir is a required parameter', 'dataLogDir is a required parameter', 'clientPort is a required parameter', 'tickTime is a required parameter', 'initLimit is a required parameter', 'syncLimit is a required parameter', 'autopurge.snapRetainCount is a required parameter', 'autopurge.purgeInterval is a required parameter']}

{'hasError': True, 'errParameter': ['dataDir'], 'reason': ['dataDir is a required parameter']}

{'hasError': False, 'errParameter': [], 'reason': []}

Raw json:

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'server.1', 'server.2', 'server.3'], 'reason': ['The dataDir property is not set.', 'The dataLogDir property is not set.', 'The clientPort property is not set.', 'The server.1 property is not set.', 'The server.2 property is not set.', 'The server.3 property is not set.']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'autopurge.snapRetainCount', 'autopurge.purgeInterval'], 'reason': ['dataDir is not set', 'dataLogDir is not set', 'clientPort is not set', 'tickTime is not set', 'initLimit is not set', 'syncLimit is not set', 'autopurge.snapRetainCount is not set', 'autopurge.purgeInterval is not set']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'server.1', 'server.2', 'server.3'], 'reason': ['dataDir is not set', 'dataLogDir is not set', 'clientPort is not set', 'tickTime is not set', 'initLimit is not set', 'syncLimit is not set', 'server.1 is not set', 'server.2 is not set', 'server.3 is not set']}

Raw json:

{'hasError': False, 'errParameter': [], 'reason': []}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'server.1', 'server.2', 'server.3'], 'reason': ['dataDir is not set', 'dataLogDir is not set', 'clientPort is not set', 'tickTime is not set', 'initLimit is not set', 'syncLimit is not set', 'server.1 is not set', 'server.2 is not set', 'server.3 is not set']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'maxClientCnxns', 'tickTime', 'initLimit', 'syncLimit', 'quorumListenOnAllIPs', 'quorumServer.saslLoginContext', 'autopurge.snapRetainCount'], 'reason': ['dataDir is not set', 'dataLogDir is not set', 'clientPort is not set', 'maxClientCnxns is not set', 'tickTime is not set', 'initLimit is not set', 'syncLimit is not set', 'quorumListenOnAllIPs is not set', 'quorumServer.saslLoginContext is not set', 'autopurge.snapRetainCount is not set']}

Raw json:

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'quorumListenOnAllIPs'], 'reason': ['dataDir is not set', 'dataLogDir is not set', 'clientPort is not set', 'tickTime is not set', 'initLimit is not set', 'syncLimit is not set', 'quorumListenOnAllIPs is not set']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'autopurge.snapRetainCount', 'autopurge.purgeInterval'], 'reason': ['dataDir is not set', 'dataLogDir is not set', 'clientPort is not set', 'tickTime is not set', 'initLimit is not set', 'syncLimit is not set', 'autopurge.snapRetainCount is not set', 'autopurge.purgeInterval is not set']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'quorumListenOnAllIPs', 'quorumServer'], 'reason': ['dataDir is not specified', 'dataLogDir is not specified', 'clientPort is not specified', 'tickTime is not specified', 'initLimit is not specified', 'syncLimit is not specified', 'quorumListenOnAllIPs is not specified', 'quorumServer is not specified']}

Raw json:

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'maxClientCnxns', 'tickTime', 'initLimit', 'syncLimit', 'autopurge.snapRetainCount'], 'reason': ['dataDir is not a valid directory', 'dataLogDir is not a valid directory', 'clientPort is not a valid port', 'maxClientCnxns is not a valid integer', 'tickTime is not a valid integer', 'initLimit is not a valid integer', 'syncLimit is not a valid integer', 'autopurge.snapRetainCount is not a valid integer']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'quorumListenOnAllIPs', 'quorumListenOnAllIPs', 'quorumServer'], 'reason': ['dataDir is not set', 'dataLogDir is not set', 'clientPort is not set', 'tickTime is not set', 'initLimit is not set', 'syncLimit is not set', 'quorumListenOnAllIPs is not set', 'quorumListenOnAllIPs is not set', 'quorumServer is not set']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'server.1', 'server.2', 'server.3'], 'reason': ['dataDir is not a directory', 'dataLogDir is not a directory', 'clientPort is not a number', 'tickTime is not a number', 'initLimit is not a number', 'syncLimit is not a number', 'server.1 is not a number', 'server.2 is not a number', 'server.3 is not a number']}

Raw json:

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'server.1', 'server.2', 'server.3'], 'reason': ['dataDir is not a valid directory', 'dataLogDir is not a valid directory', 'clientPort is not a valid port', 'tickTime is not a valid integer', 'initLimit is not a valid integer', 'syncLimit is not a valid integer', 'server.1 is not a valid server', 'server.2 is not a valid server', 'server.3 is not a valid server']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'autopurge.snapRetainCount', 'autopurge.purgeInterval'], 'reason': ['dataDir is not specified', 'dataLogDir is not specified', 'clientPort is not specified', 'tickTime is not specified', 'initLimit is not specified', 'syncLimit is not specified', 'autopurge.snapRetainCount is not specified', 'autopurge.purgeInterval is not specified']}

{'hasError': False, 'errParameter': [], 'reason': []}

Raw json:

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'server.1', 'server.2', 'server.3'], 'reason': ['dataDir is not a valid directory', 'dataLogDir is not a valid directory', 'clientPort is not a valid port', 'tickTime is not a valid integer', 'initLimit is not a valid integer', 'syncLimit is not a valid integer', 'server.1 is not a valid server address', 'server.2 is not a valid server address', 'server.3 is not a valid server address']}

{'hasError': False, 'errParameter': [], 'reason': []}

{'hasError': True, 'errParameter': ['clientPort', 'dataDir', 'dataLogDir', 'tickTime', 'initLimit', 'syncLimit', 'autopurge.snapRetainCount'], 'reason': ['clientPort must be an integer', 'dataDir must be a string', 'dataLogDir must be a string', 'tickTime must be an integer', 'initLimit must be an integer', 'syncLimit must be an integer', 'autopurge.snapRetainCount must be an integer']}

Raw json:

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'server.1', 'server.2', 'server.3'], 'reason': ['dataDir is not a valid directory', 'dataLogDir is not a valid directory', 'clientPort is not a valid port', 'server.1 is not a valid server address', 'server.2 is not a valid server address', 'server.3 is not a valid server address']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'quorumListenOnAllIPs'], 'reason': ['The dataDir property is required.', 'The dataLogDir property is required.', 'The clientPort property is required.', 'The tickTime property is required.', 'The initLimit property is required.', 'The syncLimit property is required.', 'The quorumListenOnAllIPs property is required.']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'server.1', 'server.2', 'server.3'], 'reason': ['dataDir is not set', 'dataLogDir is not set', 'clientPort is not set', 'tickTime is not set', 'initLimit is not set', 'syncLimit is not set', 'server.1 is not set', 'server.2 is not set', 'server.3 is not set']}

Raw json:

{'hasError': False, 'errParameter': [], 'reason': []}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'autopurge.snapRetainCount'], 'reason': ['dataDir is not set', 'dataLogDir is not set', 'clientPort is not set', 'tickTime is not set', 'initLimit is not set', 'syncLimit is not set', 'autopurge.snapRetainCount is not set']}

{'hasError': True, 'errParameter': ['dataDir', 'dataLogDir', 'clientPort', 'tickTime', 'initLimit', 'syncLimit', 'autopurge.snapRetainCount'], 'reason': ['dataDir is not a directory', 'dataLogDir is not a directory', 'clientPort is not a number', 'tickTime is not a number', 'initLimit is not a number', 'syncLimit is not a number', 'autopurge.snapRetainCount is not a number']}

Final result:

There are 7 misconfiguration parameters in the input: dataDir	dataLogDir	clientPort	tickTime	initLimit	syncLimit	autopurge.snapRetainCount
[Ciri] Reason for dataDir: dataDir is not set
[Ciri] Reason for dataLogDir: dataLogDir is not a directory
[Ciri] Reason for clientPort: clientPort is not a number
[Ciri] Reason for tickTime: tickTime is not set
[Ciri] Reason for initLimit: initLimit is not a number
[Ciri] Reason for syncLimit: syncLimit is not a number
[Ciri] Reason for autopurge.snapRetainCount: autopurge.snapRetainCount is not a number
