Raw json:

{'hasError': True, 'errParameter': ['io.bytes.per.checksum', 'io.map.index.interval'], 'reason': ['io.bytes.per.checksum must not be larger than io.file.buffer.size', 'MapFile consist of two files - data file (tuples) and index file (keys). For every io.map.index.interval records written in the data file, an entry (record-key, data-file-position) is written in the index file. This is to allow for doing binary search later within the index file to look up records by their keys and get their closest positions in the data file.']}

{'hasError': True, 'errParameter': ['fs.AbstractFileSystem.abfs.impl'], 'reason': ['The property fs.AbstractFileSystem.abfs.impl is not defined in the current version of Hadoop.']}

{'hasError': True, 'errParameter': ['io.bytes.per.checksum', 'io.map.index.interval'], 'reason': ['io.bytes.per.checksum must not be larger than io.file.buffer.size', 'MapFile consist of two files - data file (tuples) and index file (keys). For every io.map.index.interval records written in the data file, an entry (record-key, data-file-position) is written in the index file. This is to allow for doing binary search later within the index file to look up records by their keys and get their closest positions in the data file.']}

Final result:

There are 2 misconfiguration parameters in the input: io.bytes.per.checksum	io.map.index.interval
[Ciri] Reason for io.bytes.per.checksum: io.bytes.per.checksum must not be larger than io.file.buffer.size
[Ciri] Reason for io.map.index.interval: MapFile consist of two files - data file (tuples) and index file (keys). For every io.map.index.interval records written in the data file, an entry (record-key, data-file-position) is written in the index file. This is to allow for doing binary search later within the index file to look up records by their keys and get their closest positions in the data file.
