Raw json:

{'hasError': True, 'errParameter': ['yarn.nodemanager.resource.percentage-physical-cpu-limit'], 'reason': ['The value of yarn.nodemanager.resource.percentage-physical-cpu-limit is not a valid integer.']}

{'hasError': True, 'errParameter': ['yarn.nodemanager.resource.percentage-physical-cpu-limit'], 'reason': ['The value of yarn.nodemanager.resource.percentage-physical-cpu-limit is not a valid number.']}

{'hasError': True, 'errParameter': ['yarn.nodemanager.resource.percentage-physical-cpu-limit', 'yarn.nodemanager.runtime.linux.docker.stop.grace-period', 'yarn.nodemanager.container-metrics.period-ms'], 'reason': ['yarn.nodemanager.resource.percentage-physical-cpu-limit: The default is to use 100% of CPU. This setting allows users to limit the amount of CPU that YARN containers use. Currently functional only on Linux using cgroups.', 'yarn.nodemanager.runtime.linux.docker.stop.grace-period: A configurable value to pass to the Docker Stop command. This value defines the number of seconds between the docker stop command sending a SIGTERM and a SIGKILL.', 'yarn.nodemanager.container-metrics.period-ms: Container metrics flush period in ms. Set to -1 for flush on completion.']}

Final result:

There are 1 misconfiguration parameters in the input: yarn.nodemanager.resource.percentage-physical-cpu-limit
[Ciri] Reason for yarn.nodemanager.resource.percentage-physical-cpu-limit: The value of yarn.nodemanager.resource.percentage-physical-cpu-limit is not a valid integer.
